{"version":3,"sources":["context/AppContext.js","context/AppState.js","components/Navbar.js","components/Search.js","components/pieChart/colors.js","components/pieChart/PieChartLanguagesUsed.js","components/Profile.js","components/SearchAndProfile.js","components/About.js","components/PageNotFound.js","components/routes/Routes.js","App.js","index.js"],"names":["AppContext","React","createContext","AppState","props","useState","search","setSearch","searchBool","setSearchBool","animation","setAnimation","name","setName","userName","setUserName","avatar","setAvatar","bio","setBio","followers","setFollowers","following","setFollowing","numOfRepos","setNumOfRepos","repos","setRepos","languageTotals","setLanguageTotals","path","setPath","Provider","value","children","Navbar","history","useHistory","className","style","marginLeft","fontSize","display","alignItems","color","paddingLeft","onClick","route","push","marginRight","CssTextField","withStyles","root","backgroundColor","fontFamily","border","TextField","CssButton","textTransform","Button","Search","useContext","handleSubmit","fetch","then","res","json","data","message","login","avatar_url","public_repos","setData","repoData","totalLanguageValues","i","length","currentRepoName","repoLanguageData","key","hasOwnProperty","setTimeout","marginTop","justifyContent","variant","onKeyPress","ev","onChange","e","target","chartColors","PieChartLanguagesUsed","maintainAspectRatio","responsive","labels","Object","keys","datasets","values","hoverBackgroundColor","options","elements","arc","borderWidth","duration","delay","easing","ref","input","CssArrowBack","ArrowBackIcon","Profile","openGitHubUserWindow","window","open","backButtonClick","src","alt","SearchAndProfile","About","PageNotFound","Routes","location","useLocation","useEffect","pathname","exact","component","App","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4bb05d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import AppContext from './AppContext';\r\nimport { useState } from 'react';\r\n\r\nconst AppState = (props) => {\r\n    // Search bar\r\n    const [search, setSearch] = useState('');\r\n    const [searchBool, setSearchBool] = useState('');\r\n\r\n    // Animation\r\n    const [animation, setAnimation] = useState(false);\r\n\r\n    // Current user information\r\n    const [name, setName] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [avatar, setAvatar] = useState('');\r\n    const [bio, setBio] = useState('');\r\n    const [followers, setFollowers] = useState('');\r\n    const [following, setFollowing] = useState('');\r\n    const [numOfRepos, setNumOfRepos] = useState('');\r\n    const [repos, setRepos] = useState([]);\r\n    const [languageTotals, setLanguageTotals] = useState([]);\r\n\r\n    // Routes and navigation\r\n    const [path, setPath] = useState('');\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                path,\r\n                setPath,\r\n                searchBool,\r\n                setSearchBool,\r\n                search,\r\n                setSearch,\r\n                name,\r\n                setName,\r\n                userName,\r\n                setUserName,\r\n                avatar,\r\n                setAvatar,\r\n                bio,\r\n                setBio,\r\n                followers,\r\n                setFollowers,\r\n                following,\r\n                setFollowing,\r\n                numOfRepos,\r\n                setNumOfRepos,\r\n                repos,\r\n                setRepos,\r\n                languageTotals,\r\n                setLanguageTotals,\r\n                animation,\r\n                setAnimation,\r\n            }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppState;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst Navbar = () => {\r\n    const history = useHistory();\r\n\r\n    const handleNavbarClick = (route) => {\r\n        history.push(route);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='navbar-container'>\r\n                <div\r\n                    style={{\r\n                        marginLeft: '5vw',\r\n                        fontSize: '1.5rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        color: 'white',\r\n                    }}>\r\n                    <GitHubIcon />\r\n                    <span style={{ paddingLeft: '0.5rem' }}>MyGH</span>\r\n                </div>\r\n                <div\r\n                    className='link'\r\n                    onClick={() => {\r\n                        handleNavbarClick('/MyGH/about');\r\n                    }}\r\n                    style={{ marginRight: '5vw' }}>\r\n                    About\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& .MuiOutlinedInput-root': {\r\n            color: 'white',\r\n            backgroundColor: '#191F24',\r\n            fontFamily: 'Roboto-Regular',\r\n            '& fieldset': {\r\n                border: '1px solid #495b69',\r\n            },\r\n            '&:hover fieldset': {\r\n                border: '2px solid #495b69',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: '3px solid #495b69',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst CssButton = withStyles({\r\n    root: {\r\n        textTransform: 'none',\r\n        fontFamily: 'Roboto-Regular',\r\n        backgroundColor: 'white',\r\n        color: '#191F24',\r\n    },\r\n})(Button);\r\n\r\nconst Search = () => {\r\n    const {\r\n        search,\r\n        setSearch,\r\n        searchBool,\r\n        setSearchBool,\r\n        setName,\r\n        setUserName,\r\n        setAvatar,\r\n        setBio,\r\n        setFollowers,\r\n        setFollowing,\r\n        setNumOfRepos,\r\n        setRepos,\r\n        setLanguageTotals,\r\n        animation,\r\n        setAnimation,\r\n    } = useContext(AppContext);\r\n\r\n    const setData = ({\r\n        name,\r\n        login,\r\n        avatar_url,\r\n        bio,\r\n        followers,\r\n        following,\r\n        public_repos,\r\n    }) => {\r\n        setName(name);\r\n        setUserName(login);\r\n        setAvatar(avatar_url);\r\n        setBio(bio);\r\n        setFollowers(followers);\r\n        setFollowing(following);\r\n        setNumOfRepos(public_repos);\r\n    };\r\n\r\n    const setLanguagesUsed = () => {\r\n        fetch(`https://api.github.com/users/${search}/repos`)\r\n            .then((res) => res.json())\r\n            .then((repoData) => {\r\n                // TODO add in the logic for language breakdown\r\n                setRepos(repoData);\r\n                let totalLanguageValues = [{}];\r\n                for (let i = 0; i < repoData.length; i++) {\r\n                    const currentRepoName = repoData[i].name;\r\n                    fetch(\r\n                        `https://api.github.com/repos/${search}/${currentRepoName}/languages`,\r\n                    )\r\n                        .then((res) => res.json())\r\n                        .then((repoLanguageData) => {\r\n                            // Will combine all repos language totals\r\n                            for (let key in repoLanguageData) {\r\n                                if (\r\n                                    totalLanguageValues[0].hasOwnProperty(key)\r\n                                ) {\r\n                                    totalLanguageValues[0][key] =\r\n                                        totalLanguageValues[0][key] +\r\n                                        repoLanguageData[key];\r\n                                } else {\r\n                                    totalLanguageValues[0][key] =\r\n                                        repoLanguageData[key];\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n                setLanguageTotals(totalLanguageValues);\r\n            });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        fetch(`https://api.github.com/users/${search}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.message === 'Not Found') {\r\n                    setSearch('');\r\n                    setSearchBool(false);\r\n                } else {\r\n                    setData(data);\r\n                    setAnimation(true);\r\n                    setLanguagesUsed();\r\n                    setTimeout(() => {\r\n                        setSearchBool(true);\r\n                    }, 1000);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {animation === true ? (\r\n                <div\r\n                    style={{ marginTop: '161px' }}\r\n                    className='transition-and-fade-out-container'>\r\n                    <div\r\n                        // Height of Navbar 65px + 32px\r\n\r\n                        className='search-main-container'>\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                            }}>\r\n                            {/* <div className='github-logo-search-main-background' /> */}\r\n                            <GitHubIcon className='github-logo-search-main' />\r\n                            {/* To be used to display a black background behind github logo */}\r\n                        </div>\r\n\r\n                        <div className='search-main-helper-text'>\r\n                            Enter a GitHub Username\r\n                        </div>\r\n\r\n                        <div className='search-main-flex-container'>\r\n                            <CssTextField variant='outlined' value={search} />\r\n                        </div>\r\n                        <div className='search-main-flex-container'>\r\n                            <CssButton variant='contained'>Search</CssButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='transition-and-fade-in-container'>\r\n                    <div\r\n                        // Height of Navbar 65px + 48px\r\n                        style={{ marginTop: '161px' }}\r\n                        className='search-main-container'>\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                            }}>\r\n                            {/* <div className='github-logo-search-main-background' /> */}\r\n                            <GitHubIcon className='github-logo-search-main' />\r\n                            {/* To be used to display a black background behind github logo */}\r\n                        </div>\r\n                        {searchBool === false ? (\r\n                            <div className='search-main-error-text'>\r\n                                Invalid Username, Please Try Again\r\n                            </div>\r\n                        ) : (\r\n                            <div className='search-main-helper-text'>\r\n                                Enter a GitHub Username\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className='search-main-flex-container'>\r\n                            <CssTextField\r\n                                variant='outlined'\r\n                                onKeyPress={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        handleSubmit();\r\n                                    }\r\n                                }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                                value={search}\r\n                            />\r\n                        </div>\r\n                        <div className='search-main-flex-container'>\r\n                            <CssButton\r\n                                onClick={handleSubmit}\r\n                                variant='contained'>\r\n                                Search\r\n                            </CssButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","export const chartColors = [\r\n    '#336699',\r\n    '#99CCFF',\r\n    '#999933',\r\n    '#666699',\r\n    '#CC9933',\r\n    '#006666',\r\n    '#3399FF',\r\n    '#993300',\r\n    '#CCCC99',\r\n    '#666666',\r\n    '#FFCC66',\r\n    '#6699CC',\r\n    '#663366',\r\n    '#9999CC',\r\n    '#CCCCCC',\r\n    '#669999',\r\n    '#CCCC66',\r\n    '#CC6600',\r\n    '#9999FF',\r\n    '#0066CC',\r\n    '#99CCCC',\r\n    '#999999',\r\n    '#FFCC00',\r\n    '#009999',\r\n    '#99CC33',\r\n    '#FF9900',\r\n    '#999966',\r\n    '#66CCCC',\r\n    '#339966',\r\n    '#CCCC33',\r\n    '#003f5c',\r\n    '#665191',\r\n    '#a05195',\r\n    '#d45087',\r\n    '#2f4b7c',\r\n    '#f95d6a',\r\n    '#ff7c43',\r\n    '#ffa600',\r\n    '#EF6F6C',\r\n    '#465775',\r\n    '#56E39F',\r\n    '#59C9A5',\r\n    '#5B6C5D',\r\n    '#0A2342',\r\n    '#2CA58D',\r\n    '#84BC9C',\r\n    '#CBA328',\r\n    '#F46197',\r\n    '#DBCFB0',\r\n    '#545775',\r\n];\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../../context/AppContext';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { chartColors } from './colors';\r\n\r\nconst PieChartLanguagesUsed = () => {\r\n    const { languageTotals } = useContext(AppContext);\r\n\r\n    const options = {\r\n        elements: {\r\n            arc: {\r\n                borderWidth: 0,\r\n            },\r\n        },\r\n        animation: {\r\n            duration: 1000,\r\n            delay: 5000,\r\n            easing: 'easeOutQuart',\r\n        },\r\n    };\r\n\r\n    const data = {\r\n        maintainAspectRatio: false,\r\n        responsive: false,\r\n        labels: Object.keys(languageTotals[0]),\r\n        datasets: [\r\n            {\r\n                data: Object.values(languageTotals[0]),\r\n                backgroundColor: chartColors,\r\n                hoverBackgroundColor: chartColors,\r\n            },\r\n        ],\r\n    };\r\n\r\n    let chartInstance = null;\r\n    return (\r\n        <>\r\n            <div className='chart-pie-languages-used-container'>\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        color: 'white',\r\n                        fontFamily: 'Roboto-Regular',\r\n                    }}>\r\n                    Most Used Languages\r\n                </div>\r\n                <Pie\r\n                    data={data}\r\n                    options={options}\r\n                    ref={(input) => {\r\n                        chartInstance = input;\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PieChartLanguagesUsed;\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport PieChartLanguagesUsed from './pieChart/PieChartLanguagesUsed';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst CssArrowBack = withStyles({\r\n    root: {\r\n        color: 'white',\r\n    },\r\n})(ArrowBackIcon);\r\n\r\nconst Profile = () => {\r\n    const openGitHubUserWindow = (route) => {\r\n        window.open(`https://github.com/RMcCurdy?tab=${route}`, '_blank');\r\n    };\r\n\r\n    const backButtonClick = () => {\r\n        setAnimation(false);\r\n        setSearch('');\r\n        setTimeout(() => {\r\n            setSearchBool('');\r\n        }, 1000);\r\n    };\r\n\r\n    const {\r\n        search,\r\n        setSearch,\r\n        searchBool,\r\n        setSearchBool,\r\n        name,\r\n        userName,\r\n        avatar,\r\n        bio,\r\n        followers,\r\n        following,\r\n        numOfRepos,\r\n        animation,\r\n        setAnimation,\r\n    } = useContext(AppContext);\r\n\r\n    return (\r\n        <>\r\n            {animation === true ? (\r\n                <>\r\n                    <div className='profile-container profile-margin-top'>\r\n                        <div\r\n                            onClick={backButtonClick}\r\n                            className='profile-last-fade-in profile-back-button link'>\r\n                            <CssArrowBack />\r\n                            <span className='profile-back-button-text'>\r\n                                Back\r\n                            </span>\r\n                        </div>\r\n                        <div className='profile-first-fade-in'>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                }}>\r\n                                <img\r\n                                    className='profile-avatar'\r\n                                    src={avatar}\r\n                                    alt='avatar'></img>\r\n                            </div>\r\n                            <div\r\n                                onClick={() => {\r\n                                    window.open(\r\n                                        'https://github.com/RMcCurdy',\r\n                                        '_blank',\r\n                                    );\r\n                                }}\r\n                                className='profile-username link'>\r\n                                {userName}\r\n                            </div>\r\n                        </div>\r\n                        <div className='profile-second-fade-in'>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                }}>\r\n                                <div className='profile-followers-container'>\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            openGitHubUserWindow(\r\n                                                'repositories',\r\n                                            );\r\n                                        }}\r\n                                        className='profile-following-count-container'>\r\n                                        <div>{numOfRepos}</div>\r\n                                        <div className='profile-followers-captions link'>\r\n                                            Repos\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            openGitHubUserWindow('followers');\r\n                                        }}\r\n                                        className='profile-following-count-container'>\r\n                                        <div>{followers}</div>\r\n                                        <div className='profile-followers-captions link'>\r\n                                            Followers\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            openGitHubUserWindow('following');\r\n                                        }}\r\n                                        className='profile-following-count-container'>\r\n                                        <div>{following}</div>\r\n                                        <div className='profile-followers-captions link'>\r\n                                            Following\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='profile-bio'>\r\n                                {bio === null ? (\r\n                                    <span>No bio.</span>\r\n                                ) : (\r\n                                    <>{bio}</>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='profile-third-fade-in'>\r\n                            <div className='profile-chart-container'>\r\n                                <PieChartLanguagesUsed />\r\n\r\n                                {/* TODO add 2 more charts here */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className='transition-and-fade-out-profile-container'>\r\n                        <div className='profile-container profile-margin-top'>\r\n                            <div\r\n                                onClick={backButtonClick}\r\n                                className='profile-back-button link'>\r\n                                <CssArrowBack />\r\n                                <span className='profile-back-button-text'>\r\n                                    Back\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                    }}>\r\n                                    <img\r\n                                        className='profile-avatar'\r\n                                        src={avatar}\r\n                                        alt='avatar'></img>\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => {\r\n                                        window.open(\r\n                                            'https://github.com/RMcCurdy',\r\n                                            '_blank',\r\n                                        );\r\n                                    }}\r\n                                    className='profile-username link'>\r\n                                    {userName}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                    }}>\r\n                                    <div className='profile-followers-container'>\r\n                                        <div\r\n                                            onClick={() => {\r\n                                                openGitHubUserWindow(\r\n                                                    'repositories',\r\n                                                );\r\n                                            }}\r\n                                            className='profile-following-count-container'>\r\n                                            <div>{numOfRepos}</div>\r\n                                            <div className='profile-followers-captions link'>\r\n                                                Repos\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            onClick={() => {\r\n                                                openGitHubUserWindow(\r\n                                                    'followers',\r\n                                                );\r\n                                            }}\r\n                                            className='profile-following-count-container'>\r\n                                            <div>{followers}</div>\r\n                                            <div className='profile-followers-captions link'>\r\n                                                Followers\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            onClick={() => {\r\n                                                openGitHubUserWindow(\r\n                                                    'following',\r\n                                                );\r\n                                            }}\r\n                                            className='profile-following-count-container'>\r\n                                            <div>{following}</div>\r\n                                            <div className='profile-followers-captions link'>\r\n                                                Following\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='profile-bio'>\r\n                                    <div className='profile-bio'>\r\n                                        {bio === null ? (\r\n                                            <span>No bio.</span>\r\n                                        ) : (\r\n                                            <>{bio}</>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className='profile-chart-container'>\r\n                                    <PieChartLanguagesUsed />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport Search from './Search';\r\nimport Profile from './Profile';\r\n\r\nconst SearchAndProfile = () => {\r\n    const { searchBool } = useContext(AppContext);\r\n\r\n    return <>{searchBool === true ? <Profile /> : <Search />}</>;\r\n};\r\n\r\nexport default SearchAndProfile;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            <div style={{ marginTop: '64px' }}>About Page</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <>\r\n            <div className='search-main-container'>\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                    }}>\r\n                    <div className='github-logo-search-main-background' />\r\n                    <GitHubIcon className='github-logo-search-main' />\r\n                    {/* To be used to display a black background behind github logo */}\r\n                </div>\r\n\r\n                <div className='page-not-found-text'>Page Not Found</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport AppContext from '../../context/AppContext';\r\n\r\n// Pages\r\nimport SearchAndProfile from '../SearchAndProfile';\r\nimport About from '../About';\r\nimport PageNotFound from '../PageNotFound';\r\n\r\nfunction Routes() {\r\n    const { setPath } = useContext(AppContext);\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        setPath(location.pathname);\r\n    }, [location, setPath]);\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path='/MyGH/' exact component={SearchAndProfile} />\r\n                <Route path='/MyGH/about/' exact component={About} />\r\n                <Route component={PageNotFound} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import './styles.css';\nimport './scssStyles.scss';\nimport AppState from './context/AppState';\nimport Navbar from './components/Navbar';\n\n// Routes\nimport Routes from './components/routes/Routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <AppState>\n            <Router>\n                <Navbar />\n                <div id='stars-container'>\n                    <div id='stars'></div>\n                    <div id='stars2'></div>\n                    <div id='stars3'></div>\n                    <Routes />\n                </div>\n            </Router>\n        </AppState>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}